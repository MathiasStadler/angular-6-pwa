{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/data/data.service.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"mat-sidenav-container,\\nmat-sidenav-content,\\nmat-sidenav {\\n  height: 100%;\\n}\\n\\nmat-sidenav {\\n  width: 250px;\\n}\\n\\na {\\n  text-decoration: none;\\n  color: white;\\n}\\n\\na:hover,\\na:active {\\n  color: lightgray;\\n}\\n\\n.navigation-items {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n  cursor: pointer;\\n}\\n\\n.icon {\\n  display: inline-block;\\n  height: 30px;\\n  margin: 0 auto;\\n  padding-right: 5px;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 15%;\\n}\\n\\n.label {\\n  display: inline-block;\\n  line-height: 30px;\\n  margin: 0;\\n  width: 85%;\\n}\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<span>hallo1</span>\\n\\n<mat-sidenav-container>\\n  <mat-sidenav #sidenav role=\\\"navigation\\\">\\n    <mat-nav-list>\\n      <a mat-list-item>\\n        <mat-icon class=\\\"icon\\\">input</mat-icon>\\n        <span class=\\\"label\\\">Login</span>\\n      </a>\\n      <a mat-list-item routerLink=\\\"/\\\">\\n        <mat-icon class=\\\"icon\\\">home</mat-icon>\\n        <span class=\\\"label\\\">Home</span>\\n      </a>\\n      <a mat-list-item routerLink=\\\"/dashboard\\\">\\n        <mat-icon class=\\\"icon\\\">dashboard</mat-icon>\\n        <span class=\\\"label\\\">Dashboard</span>\\n      </a>\\n      <a mat-list-item type=\\\"button\\\">\\n        <mat-icon class=\\\"icon\\\">input</mat-icon>\\n        <span class=\\\"label\\\">LogOut</span>\\n      </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <div fxHide.gt-xs>\\n        <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n          <mat-icon>menu</mat-icon>\\n        </button>\\n      </div>\\n      <div>\\n        <a routerLink=\\\"/\\\">\\n          Material Blog\\n        </a>\\n      </div>\\n      <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\" fxHide.xs>\\n        <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\n          <li>\\n            <a>\\n              <mat-icon class=\\\"icon\\\">input</mat-icon>\\n              <span class=\\\"label\\\">Login</span>\\n            </a>\\n          </li>\\n          <li>\\n            <a routerLink=\\\"/\\\">\\n              <mat-icon class=\\\"icon\\\">home</mat-icon>\\n              <span class=\\\"label\\\">Home</span>\\n            </a>\\n          </li>\\n          <li>\\n            <a routerLink=\\\"/dashboard\\\">\\n              <mat-icon class=\\\"icon\\\">dashboard</mat-icon>\\n              <span class=\\\"label\\\">Dashboard</span>\\n            </a>\\n          </li>\\n          <li>\\n            <a>\\n              <mat-icon class=\\\"icon\\\">input</mat-icon>\\n              <span class=\\\"label\\\">LogOut</span>\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </mat-toolbar>\\n    <main>\\n      <router-outlet></router-outlet>\\n    </main>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-material-tutorial';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\n\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n//import { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MaterialModule } from \"./material.module\";\n\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { WelcomeComponent } from \"./welcome/welcome.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\n\nimport { AppRouters } from \"./app.routes\";\n\nimport { DataService } from \"./data/data.service\";\n\n@NgModule({\n  declarations: [AppComponent, WelcomeComponent, DashboardComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    AppRouters\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { WelcomeComponent } from \"./welcome/welcome.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: WelcomeComponent },\n  { path: \"dashboard\", component: DashboardComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRouters {}\n","module.exports = \".card {\\n  min-width: 80%;\\n}\\n\\n.example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 100%;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\na {\\n  cursor: pointer;\\n}\\n\"","module.exports = \"<div>\\n  <br>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"container\\\">\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayout.gt-md=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"content\\\">\\n        <div class=\\\"blocks\\\">\\n          <button button=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\n            <mat-icon>add</mat-icon> Add Post\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <br>\\n    <div class=\\\"container\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"content\\\">\\n        <mat-card class=\\\"card\\\">\\n          <mat-card-title fxLayout.gt-xs=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\n            <h3>Recent Posts</h3>\\n          </mat-card-title>\\n          <mat-card-content>\\n            <div class=\\\"example-container mat-elevation-z8\\\">\\n              <mat-table #table [dataSource]=\\\"dataSource\\\">\\n                <ng-container matColumnDef=\\\"date_posted\\\">\\n                  <mat-header-cell *matHeaderCellDef> Date Posted </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let element\\\"> {{element.date_posted | date: 'd/M/y'}} </mat-cell>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"title\\\">\\n                  <mat-header-cell *matHeaderCellDef> Title </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </mat-cell>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"category\\\">\\n                  <mat-header-cell *matHeaderCellDef> Category </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let element\\\"> {{element.category}} </mat-cell>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"delete\\\">\\n                  <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let element\\\">\\n                    <a type=\\\"button\\\">\\n                      <mat-icon class=\\\"icon\\\">delete</mat-icon>\\n                    </a>\\n                  </mat-cell>\\n                </ng-container>\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n              </mat-table>\\n            </div>\\n          </mat-card-content>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from \"@angular/core\";\nimport { DataService } from \"../data/data.service\";\nimport { Post } from \"../Post\";\nimport { DataSource } from \"@angular/cdk/table\";\n\nimport { Observable } from \"rxjs/Observable\";\nimport { of } from \"rxjs\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"]\n})\nexport class DashboardComponent {\n  constructor(private dataService: DataService) {}\n\n  displayedColumns = [\"date_posted\", \"title\", \"category\", \"delete\"];\n  dataSource = new PostDataSource(this.dataService);\n}\n\nexport class PostDataSource extends DataSource<any> {\n  constructor(private dataService: DataService) {\n    super();\n  }\n\n  connect(): Observable<Post[]> {\n    return this.dataService.getData();\n  }\n\n  disconnect() {}\n}\n","import { Injectable } from \"@angular/core\";\nimport { Post } from \"../Post\";\n\n// import { Observable } from \"rxjs/Observable\";\n// import \"rxjs/add/observable/of\";\n//import \"rxjs/add/observable/throw\";\n// import \"rxjs/add/operator/of\";\n\nimport { Observable } from \"rxjs/Observable\";\n//import \"rxjs/add/observable/of\";\nimport { of } from \"rxjs\";\n//import { Subscriber } from 'rxjs/Subscriber';\n\n@Injectable()\nexport class DataService {\n  ELEMENT_DATA: Post[] = [\n    {\n      position: 0,\n      title: \"Post One\",\n      category: \"Web Development\",\n      date_posted: new Date(),\n      body: \"Body 1\"\n    },\n    {\n      position: 1,\n      title: \"Post Two\",\n      category: \"Android Development\",\n      date_posted: new Date(),\n      body: \"Body 2\"\n    },\n    {\n      position: 2,\n      title: \"Post Three\",\n      category: \"IOS Development\",\n      date_posted: new Date(),\n      body: \"Body 3\"\n    },\n    {\n      position: 3,\n      title: \"Post Four\",\n      category: \"Android Development\",\n      date_posted: new Date(),\n      body: \"Body 4\"\n    },\n    {\n      position: 4,\n      title: \"Post Five\",\n      category: \"IOS Development\",\n      date_posted: new Date(),\n      body: \"Body 5\"\n    },\n    {\n      position: 5,\n      title: \"Post Six\",\n      category: \"Web Development\",\n      date_posted: new Date(),\n      body: \"Body 6\"\n    }\n  ];\n  categories = [\n    { value: \"Web-Development\", viewValue: \"Web Development\" },\n    { value: \"Android-Development\", viewValue: \"Android Development\" },\n    { value: \"IOS-Development\", viewValue: \"IOS Development\" }\n  ];\n\n  constructor() {}\n\n  getData(): Observable<Post[]> {\n    //return Observable.of<Post[]>(this.ELEMENT_DATA);\n    return of<Post[]>(this.ELEMENT_DATA);\n  }\n\n  getCategories() {\n    return this.categories;\n  }\n\n  addPost(data) {\n    this.ELEMENT_DATA.push(data);\n  }\n\n  deletePost(index) {\n    this.ELEMENT_DATA = [\n      ...this.ELEMENT_DATA.slice(0, index),\n      ...this.ELEMENT_DATA.slice(index + 1)\n    ];\n  }\n\n  dataLength() {\n    return this.ELEMENT_DATA.length;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport {\n  MatSidenavModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatListModule,\n  MatCardModule,\n  MatButtonModule,\n  MatTableModule\n} from \"@angular/material\";\n\n@NgModule({\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule\n  ],\n  exports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule\n  ]\n})\nexport class MaterialModule {}\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>Angular Content Management System</h1>\\n  <p>\\n    This is a platform for technical writers to manage their blog post contents related to angular.\\n    <br> Click on Login to get Started!!!\\n  </p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import \"hammerjs\";\n\nimport { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}